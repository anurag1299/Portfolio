{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nexport var throttle = function throttle(func) {\n  var wait = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100;\n  var timer = null;\n  return function () {\n    var _this = this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    if (timer === null) {\n      timer = setTimeout(function () {\n        func.apply(_this, args);\n        timer = null;\n      }, wait);\n    }\n  };\n};\nexport var hex2rgba = function hex2rgba(hex) {\n  var alpha = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n\n  var _hex$match$map = hex.match(/\\w\\w/g).map(function (x) {\n    return parseInt(x, 16);\n  }),\n      _hex$match$map2 = _slicedToArray(_hex$match$map, 3),\n      r = _hex$match$map2[0],\n      g = _hex$match$map2[1],\n      b = _hex$match$map2[2];\n\n  return \"rgba(\".concat(r, \",\").concat(g, \",\").concat(b, \",\").concat(alpha, \")\");\n};","map":null,"metadata":{},"sourceType":"module"}