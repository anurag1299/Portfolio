{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"/home/alkatraz/Desktop/programs/PROJECT/Portfolio/components/side.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"display: none;\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"right: 25px;\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport styled from \"styled-components\";\nimport { theme, media } from \"../styles/index\";\nvar colors = theme.colors,\n    loaderDelay = theme.loaderDelay;\nvar StyledContainer = styled.div.withConfig({\n  displayName: \"side__StyledContainer\",\n  componentId: \"fxz689-0\"\n})([\"width:40px;position:fixed;bottom:0;left:\", \";right:\", \";z-index:10;color:\", \";\", \";\", \";\"], function (props) {\n  return props.orientation === \"left\" ? \"40px\" : \"auto\";\n}, function (props) {\n  return props.orientation === \"left\" ? \"auto\" : \"40px\";\n}, colors.lightSlate, media.desktop(_templateObject()), media.tablet(_templateObject2()));\n_c = StyledContainer;\n\nvar Side = function Side(_ref) {\n  _s();\n\n  var children = _ref.children,\n      isHome = _ref.isHome,\n      orientation = _ref.orientation;\n\n  var _useState = useState(!isHome),\n      isMounted = _useState[0],\n      setIsMounted = _useState[1];\n\n  useEffect(function () {\n    if (!isHome) {\n      return;\n    }\n\n    var timeout = setTimeout(function () {\n      return setIsMounted(true);\n    }, loaderDelay);\n    return function () {\n      return clearTimeout(timeout);\n    };\n  }, []);\n  return __jsx(StyledContainer, {\n    orientation: orientation,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, __jsx(TransitionGroup, {\n    component: null,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, isMounted && __jsx(CSSTransition, {\n    classNames: isHome ? \"fade\" : \"\",\n    timeout: isHome ? loaderDelay : 0,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }, children)));\n};\n\n_s(Side, \"idz6xPy7OocOUXOzeIOGx2v4C0w=\");\n\n_c2 = Side;\nSide.propTypes = {\n  children: PropTypes.node.isRequired,\n  isHome: PropTypes.bool,\n  orientation: PropTypes.string\n};\nexport default Side;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"StyledContainer\");\n$RefreshReg$(_c2, \"Side\");","map":{"version":3,"sources":["/home/alkatraz/Desktop/programs/PROJECT/Portfolio/components/side.js"],"names":["React","useState","useEffect","PropTypes","CSSTransition","TransitionGroup","styled","theme","media","colors","loaderDelay","StyledContainer","div","props","orientation","lightSlate","desktop","tablet","Side","children","isHome","isMounted","setIsMounted","timeout","setTimeout","clearTimeout","propTypes","node","isRequired","bool","string"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,aAAT,EAAwBC,eAAxB,QAA+C,wBAA/C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,KAAT,EAAgBC,KAAhB,QAA6B,iBAA7B;IACQC,M,GAAwBF,K,CAAxBE,M;IAAQC,W,GAAgBH,K,CAAhBG,W;AAEhB,IAAMC,eAAe,GAAGL,MAAM,CAACM,GAAV;AAAA;AAAA;AAAA,iGAIX,UAACC,KAAD;AAAA,SAAYA,KAAK,CAACC,WAAN,KAAsB,MAAtB,GAA+B,MAA/B,GAAwC,MAApD;AAAA,CAJW,EAKV,UAACD,KAAD;AAAA,SAAYA,KAAK,CAACC,WAAN,KAAsB,MAAtB,GAA+B,MAA/B,GAAwC,MAApD;AAAA,CALU,EAOVL,MAAM,CAACM,UAPG,EAQjBP,KAAK,CAACQ,OARW,qBASjBR,KAAK,CAACS,MATW,qBAArB;KAAMN,e;;AAYN,IAAMO,IAAI,GAAG,SAAPA,IAAO,OAAuC;AAAA;;AAAA,MAApCC,QAAoC,QAApCA,QAAoC;AAAA,MAA1BC,MAA0B,QAA1BA,MAA0B;AAAA,MAAlBN,WAAkB,QAAlBA,WAAkB;;AAAA,kBAChBb,QAAQ,CAAC,CAACmB,MAAF,CADQ;AAAA,MAC3CC,SAD2C;AAAA,MAChCC,YADgC;;AAGlDpB,EAAAA,SAAS,CAAC,YAAM;AACd,QAAI,CAACkB,MAAL,EAAa;AACX;AACD;;AACD,QAAMG,OAAO,GAAGC,UAAU,CAAC;AAAA,aAAMF,YAAY,CAAC,IAAD,CAAlB;AAAA,KAAD,EAA2BZ,WAA3B,CAA1B;AACA,WAAO;AAAA,aAAMe,YAAY,CAACF,OAAD,CAAlB;AAAA,KAAP;AACD,GANQ,EAMN,EANM,CAAT;AAQA,SACE,MAAC,eAAD;AAAiB,IAAA,WAAW,EAAET,WAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,eAAD;AAAiB,IAAA,SAAS,EAAE,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGO,SAAS,IACR,MAAC,aAAD;AACE,IAAA,UAAU,EAAED,MAAM,GAAG,MAAH,GAAY,EADhC;AAEE,IAAA,OAAO,EAAEA,MAAM,GAAGV,WAAH,GAAiB,CAFlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIGS,QAJH,CAFJ,CADF,CADF;AAcD,CAzBD;;GAAMD,I;;MAAAA,I;AA2BNA,IAAI,CAACQ,SAAL,GAAiB;AACfP,EAAAA,QAAQ,EAAEhB,SAAS,CAACwB,IAAV,CAAeC,UADV;AAEfR,EAAAA,MAAM,EAAEjB,SAAS,CAAC0B,IAFH;AAGff,EAAAA,WAAW,EAAEX,SAAS,CAAC2B;AAHR,CAAjB;AAMA,eAAeZ,IAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport styled from \"styled-components\";\nimport { theme, media } from \"../styles/index\";\nconst { colors, loaderDelay } = theme;\n\nconst StyledContainer = styled.div`\n  width: 40px;\n  position: fixed;\n  bottom: 0;\n  left: ${(props) => (props.orientation === \"left\" ? \"40px\" : \"auto\")};\n  right: ${(props) => (props.orientation === \"left\" ? \"auto\" : \"40px\")};\n  z-index: 10;\n  color: ${colors.lightSlate};\n  ${media.desktop`right: 25px;`};\n  ${media.tablet`display: none;`};\n`;\n\nconst Side = ({ children, isHome, orientation }) => {\n  const [isMounted, setIsMounted] = useState(!isHome);\n\n  useEffect(() => {\n    if (!isHome) {\n      return;\n    }\n    const timeout = setTimeout(() => setIsMounted(true), loaderDelay);\n    return () => clearTimeout(timeout);\n  }, []);\n\n  return (\n    <StyledContainer orientation={orientation}>\n      <TransitionGroup component={null}>\n        {isMounted && (\n          <CSSTransition\n            classNames={isHome ? \"fade\" : \"\"}\n            timeout={isHome ? loaderDelay : 0}\n          >\n            {children}\n          </CSSTransition>\n        )}\n      </TransitionGroup>\n    </StyledContainer>\n  );\n};\n\nSide.propTypes = {\n  children: PropTypes.node.isRequired,\n  isHome: PropTypes.bool,\n  orientation: PropTypes.string,\n};\n\nexport default Side;\n"]},"metadata":{},"sourceType":"module"}