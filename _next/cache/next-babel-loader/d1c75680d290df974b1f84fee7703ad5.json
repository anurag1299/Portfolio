{"ast":null,"code":"var _jsxFileName = \"/home/alkatraz/Desktop/programs/PROJECT/Portfolio/pages/_document.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport Document, { Head, Main, NextScript } from \"next/document\"; // Import styled components ServerStyleSheet\n\nimport { ServerStyleSheet } from \"styled-components\";\nexport default class MyDocument extends Document {\n  static getInitialProps({\n    renderPage\n  }) {\n    // Step 1: Create an instance of ServerStyleSheet\n    const sheet = new ServerStyleSheet(); // Step 2: Retrieve styles from components in the page\n\n    const page = renderPage(App => props => sheet.collectStyles(__jsx(App, _extends({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 27\n      }\n    })))); // Step 3: Extract the styles as <style> tags\n\n    const styleTags = sheet.getStyleElement(); // Step 4: Pass styleTags as a prop\n\n    return _objectSpread(_objectSpread({}, page), {}, {\n      styleTags\n    });\n  }\n\n  render() {\n    return __jsx(\"html\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }\n    }, __jsx(Head, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }\n    }, this.props.styleTags), __jsx(\"body\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }\n    }, __jsx(Main, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }\n    }), __jsx(NextScript, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["/home/alkatraz/Desktop/programs/PROJECT/Portfolio/pages/_document.js"],"names":["Document","Head","Main","NextScript","ServerStyleSheet","MyDocument","getInitialProps","renderPage","sheet","page","App","props","collectStyles","styleTags","getStyleElement","render"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,QAAP,IAAmBC,IAAnB,EAAyBC,IAAzB,EAA+BC,UAA/B,QAAiD,eAAjD,C,CAEA;;AACA,SAASC,gBAAT,QAAiC,mBAAjC;AAEA,eAAe,MAAMC,UAAN,SAAyBL,QAAzB,CAAkC;AAC/C,SAAOM,eAAP,CAAuB;AAAEC,IAAAA;AAAF,GAAvB,EAAuC;AACrC;AACA,UAAMC,KAAK,GAAG,IAAIJ,gBAAJ,EAAd,CAFqC,CAIrC;;AACA,UAAMK,IAAI,GAAGF,UAAU,CAAEG,GAAD,IAAUC,KAAD,IAC/BH,KAAK,CAACI,aAAN,CAAoB,MAAC,GAAD,eAASD,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAApB,CADqB,CAAvB,CALqC,CASrC;;AACA,UAAME,SAAS,GAAGL,KAAK,CAACM,eAAN,EAAlB,CAVqC,CAYrC;;AACA,2CAAYL,IAAZ;AAAkBI,MAAAA;AAAlB;AACD;;AAEDE,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGG,KAAKJ,KAAL,CAAWE,SAHd,CADF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CANF,CADF;AAaD;;AA/B8C","sourcesContent":["import Document, { Head, Main, NextScript } from \"next/document\";\n\n// Import styled components ServerStyleSheet\nimport { ServerStyleSheet } from \"styled-components\";\n\nexport default class MyDocument extends Document {\n  static getInitialProps({ renderPage }) {\n    // Step 1: Create an instance of ServerStyleSheet\n    const sheet = new ServerStyleSheet();\n\n    // Step 2: Retrieve styles from components in the page\n    const page = renderPage((App) => (props) =>\n      sheet.collectStyles(<App {...props} />)\n    );\n\n    // Step 3: Extract the styles as <style> tags\n    const styleTags = sheet.getStyleElement();\n\n    // Step 4: Pass styleTags as a prop\n    return { ...page, styleTags };\n  }\n\n  render() {\n    return (\n      <html>\n        <Head>\n          {/* Step 5: Output the styles in the head  */}\n\n          {this.props.styleTags}\n        </Head>\n        <body>\n          <Main />\n          <NextScript />\n        </body>\n      </html>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}