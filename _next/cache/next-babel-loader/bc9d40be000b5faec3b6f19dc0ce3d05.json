{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nexport var throttle = function throttle(func) {\n  var wait = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100;\n  var timer = null;\n  return function () {\n    var _this = this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    if (timer === null) {\n      timer = setTimeout(function () {\n        func.apply(_this, args);\n        timer = null;\n      }, wait);\n    }\n  };\n};\nexport var hex2rgba = function hex2rgba(hex) {\n  var alpha = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n\n  var _hex$match$map = hex.match(/\\w\\w/g).map(function (x) {\n    return parseInt(x, 16);\n  }),\n      _hex$match$map2 = _slicedToArray(_hex$match$map, 3),\n      r = _hex$match$map2[0],\n      g = _hex$match$map2[1],\n      b = _hex$match$map2[2];\n\n  return \"rgba(\".concat(r, \",\").concat(g, \",\").concat(b, \",\").concat(alpha, \")\");\n};","map":{"version":3,"sources":["/home/alkatraz/Desktop/programs/PROJECT/Portfolio/utils/index.js"],"names":["throttle","func","wait","timer","args","setTimeout","apply","hex2rgba","hex","alpha","match","map","x","parseInt","r","g","b"],"mappings":";AAAA,OAAO,IAAMA,QAAQ,GAAG,SAAXA,QAAW,CAACC,IAAD,EAAsB;AAAA,MAAfC,IAAe,uEAAR,GAAQ;AAC5C,MAAIC,KAAK,GAAG,IAAZ;AACA,SAAO,YAAmB;AAAA;;AAAA,sCAANC,IAAM;AAANA,MAAAA,IAAM;AAAA;;AACxB,QAAID,KAAK,KAAK,IAAd,EAAoB;AAClBA,MAAAA,KAAK,GAAGE,UAAU,CAAC,YAAM;AACvBJ,QAAAA,IAAI,CAACK,KAAL,CAAW,KAAX,EAAiBF,IAAjB;AACAD,QAAAA,KAAK,GAAG,IAAR;AACD,OAHiB,EAGfD,IAHe,CAAlB;AAID;AACF,GAPD;AAQD,CAVM;AAYP,OAAO,IAAMK,QAAQ,GAAG,SAAXA,QAAW,CAACC,GAAD,EAAoB;AAAA,MAAdC,KAAc,uEAAN,CAAM;;AAAA,uBACxBD,GAAG,CAACE,KAAJ,CAAU,OAAV,EAAmBC,GAAnB,CAAuB,UAACC,CAAD;AAAA,WAAOC,QAAQ,CAACD,CAAD,EAAI,EAAJ,CAAf;AAAA,GAAvB,CADwB;AAAA;AAAA,MACnCE,CADmC;AAAA,MAChCC,CADgC;AAAA,MAC7BC,CAD6B;;AAE1C,wBAAeF,CAAf,cAAoBC,CAApB,cAAyBC,CAAzB,cAA8BP,KAA9B;AACD,CAHM","sourcesContent":["export const throttle = (func, wait = 100) => {\n  let timer = null;\n  return function (...args) {\n    if (timer === null) {\n      timer = setTimeout(() => {\n        func.apply(this, args);\n        timer = null;\n      }, wait);\n    }\n  };\n};\n\nexport const hex2rgba = (hex, alpha = 1) => {\n  const [r, g, b] = hex.match(/\\w\\w/g).map((x) => parseInt(x, 16));\n  return `rgba(${r},${g},${b},${alpha})`;\n};\n"]},"metadata":{},"sourceType":"module"}